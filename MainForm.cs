using System;
using System.Windows.Forms;


namespace QuickSpecs
{

	using static EventHelper;
	public partial class MainForm : Form
	{
		public MainForm()
		{		
			InitializeComponent();
		}
		
		void MainFormLoad(object sender, EventArgs e)
		{ 
			UpdateSpecs();			
		}
		
		void fmrAboutClick(object sender, EventArgs e)
		{
			InfoForm infoForm = new InfoForm();
			infoForm.ShowDialog();
		}

		void BtnRefreshClick(object sender, EventArgs e)
		{
			UpdateSpecs();
		}

		void BtnOutTextClick(object sender, EventArgs e)
		{
			Clipboard.SetText(rtbReport.Text);
			MessageBox.Show("Specs have been copied to the Clipboard");			
		}

		void UpdateSpecs()
		{
	//		lbStatus.Text = "Please Wait...";

			string cpu_name = getCpuName();
			string gpu_name = getGpuName();
			int ram_cpct = getRamCapacity();
			int ram_curr = getCurrentRam();
			string win_spec = string.IsNullOrEmpty(Environment.OSVersion.ServicePack) ? $"{ getWindowsName() }" : $" { getWindowsName() } /{ Environment.OSVersion.ServicePack }";
			string[] ports = getPortNames();
			string port_txt = getPortNames("\n");
			string hard_disks = getHardDisks();


			tbCpu.Text = cpu_name;
			tbGpu.Text = gpu_name;
			tbRam.Text = $"{ string.Format("{0:n0}", ram_curr / 1000) } MB ( { string.Format("{0:n0}", ram_curr) } ) Max of { string.Format("{0:n0}", ram_cpct / 1000) } MB installable";
			tbOs.Text = win_spec;
			lbPorts.Items.Clear();
			listBoxHardDisk.Items.Clear();
			foreach (string port in ports)
			{
				lbPorts.Items.Add(port);
			}
			foreach (string[] item in getLogicalDisks())
			{
				listBoxHardDisk.Items.Add($"{ item[0] } - { item[1] } - { item[2] }");
			}

			string now_txt = DateTime.Now.ToString("dd/MM/yyyy HH:mm");

			lbStatus.Text = "Updated - " + now_txt;

			// Plain Text Output
			string report_txt = $@"Generated By Quick Spec - { now_txt } 
[CPU]
{ cpu_name }

[GPU]
{ gpu_name }

[RAM]
{ tbRam.Text }

[OS/Service Pack Info]
{ win_spec }

[Opened serial port]
{ port_txt }

[Hard Disks]
{ hard_disks }";

			rtbReport.Text = report_txt;
		}
	}
}
